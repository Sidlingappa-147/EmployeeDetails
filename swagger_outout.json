{
  "swagger": "2.0",
  "info": {
    "title": "Employees API",
    "description": "Adding, Updating and Deleting employee details",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/v1/employee/add": {
      "post": {
        "tags": [
          "Employee"
        ],
        "description": "This routes is used for creating an organization with Employee Details",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Employee Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SuccessMessage"
            }
          },
          "400": {
            "description": "Fail response",
            "schema": {
              "$ref": "#/definitions/FailMessage"
            }
          }
        }
      }
    },
    "/v1/employee/update": {
      "put": {
        "tags": [
          "Update Employee"
        ],
        "description": "This routes is used for Updating an organization with Employee Details",
        "parameters": [
          {
            "name": "what_to_update",
            "in": "query",
            "description": "enter value what to update",
            "type": "string"
          },
          {
            "name": "where_to_update",
            "in": "query",
            "description": "enter value where to update",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/v1/employee/delete": {
      "delete": {
        "tags": [
          "delete Employee"
        ],
        "description": "This routes is used for deleting an organization with Employee Details",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "enter email to delete this employee",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/v1/employee/fetchAll": {
      "get": {
        "tags": [
          "Get All Employee"
        ],
        "description": "This routes is used for fetching an organization with Employee Details",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeeDetails": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "Sidlingappa"
        },
        "lastname": {
          "type": "string",
          "example": "kurubatra"
        },
        "age": {
          "type": "number",
          "example": 0
        },
        "salary": {
          "type": "number",
          "example": 0
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "email": {
          "type": "string",
          "example": "siddu@abc.com"
        },
        "password": {
          "type": "string",
          "example": "Siddu@123"
        },
        "address": {
          "type": "string",
          "example": "#29 BHIVE MG Road, Mahalakshmi Chambers,MG Road Next to Trinity Metro Station"
        }
      }
    },
    "SuccessMessage": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "body": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "message": {
              "type": "string",
              "example": "Employee Data stored successfully."
            }
          }
        }
      }
    },
    "FailMessage": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 400
        },
        "body": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "failed"
            },
            "message": {
              "type": "string",
              "example": "Error in data."
            }
          }
        }
      }
    }
  },
  "schemas": [
    "http",
    "https"
  ]
}